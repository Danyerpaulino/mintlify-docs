{
  "openapi": "3.0.0",
  "info": {
    "title": "Klen AI API",
    "description": "API for interacting with Klen AI services including calls, agents, contacts, and calendar",
    "version": "1.0.0",
    "contact": {
      "name": "Klen AI Support",
      "email": "support@klen.ai",
      "url": "https://klen.ai/support"
    }
  },
  "servers": [
    {
      "url": "https://api.klen.ai/api/v1",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/calls": {
      "get": {
        "summary": "Get Calls",
        "description": "Retrieve a paginated list of calls with various filtering options",
        "operationId": "getCalls",
        "tags": ["Calls"],
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "description": "Filter by agent ID or assistant ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by call status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["completed", "failed", "in-progress"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by call type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["inbound", "outbound"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of calls",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Initiate Call",
        "description": "Initiate an outbound call from an AI agent to a specified phone number",
        "operationId": "initiateCall",
        "tags": ["Calls"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiateCallRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiateCallResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "402": {
            "description": "Insufficient funds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Agent not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calls/{call_id}": {
      "get": {
        "summary": "Get Call Details",
        "description": "Retrieve detailed information about a specific call",
        "operationId": "getCallDetails",
        "tags": ["Calls"],
        "parameters": [
          {
            "name": "call_id",
            "in": "path",
            "description": "ID of the call to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed call information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Call not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/agents": {
      "get": {
        "summary": "Get Agents",
        "description": "Retrieve a list of AI agents that the user has access to",
        "operationId": "getAgents",
        "tags": ["Agents"],
        "responses": {
          "200": {
            "description": "A list of agents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "summary": "Get Contacts",
        "description": "Retrieve a paginated list of contacts with various filtering options",
        "operationId": "getContacts",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "stage",
            "in": "query",
            "description": "Filter by contact stage",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by contact status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Filter by tag name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in first name, last name, and email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of contacts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}": {
      "get": {
        "summary": "Get Contact Details",
        "description": "Retrieve detailed information about a specific contact",
        "operationId": "getContactDetails",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "description": "ID of the contact to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed contact information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/create": {
      "post": {
        "summary": "Create Contact",
        "description": "Create a new contact with the specified information",
        "operationId": "createContact",
        "tags": ["Contacts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Team not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/update": {
      "put": {
        "summary": "Update Contact (Full)",
        "description": "Update an existing contact with the specified information (full update)",
        "operationId": "updateContactFull",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "description": "ID of the contact to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Contact (Partial)",
        "description": "Update an existing contact with the specified information (partial update)",
        "operationId": "updateContactPartial",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "description": "ID of the contact to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/events": {
      "get": {
        "summary": "Get Calendar Events",
        "description": "Retrieve a paginated list of calendar events with various filtering options",
        "operationId": "getCalendarEvents",
        "tags": ["Calendar"],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date for the range (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date for the range (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by event status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["scheduled", "confirmed", "cancelled", "completed", "no_show"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of calendar events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEventList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/events/{event_id}": {
      "get": {
        "summary": "Get Calendar Event Details",
        "description": "Retrieve detailed information about a specific calendar event",
        "operationId": "getCalendarEventDetails",
        "tags": ["Calendar"],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "ID or UUID of the event to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed calendar event information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEventDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/events/create": {
      "post": {
        "summary": "Create Calendar Event",
        "description": "Create a new calendar event with the specified information",
        "operationId": "createCalendarEvent",
        "tags": ["Calendar"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCalendarEventRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCalendarEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Agent or team not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/events/{event_id}/update": {
      "put": {
        "summary": "Update Calendar Event (Full)",
        "description": "Update an existing calendar event with the specified information (full update)",
        "operationId": "updateCalendarEventFull",
        "tags": ["Calendar"],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "ID or UUID of the event to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCalendarEventRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCalendarEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Event, agent, or team not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Calendar Event (Partial)",
        "description": "Update an existing calendar event with the specified information (partial update)",
        "operationId": "updateCalendarEventPartial",
        "tags": ["Calendar"],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "ID or UUID of the event to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCalendarEventRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCalendarEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Event, agent, or team not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/events/{event_id}/cancel": {
      "post": {
        "summary": "Cancel Calendar Event",
        "description": "Cancel an existing calendar event (sets status to cancelled)",
        "operationId": "cancelCalendarEvent",
        "tags": ["Calendar"],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "ID or UUID of the event to cancel",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelCalendarEventRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelCalendarEventResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/availability": {
      "get": {
        "summary": "Get Calendar Availability",
        "description": "Retrieve available time slots for scheduling",
        "operationId": "getCalendarAvailability",
        "tags": ["Calendar"],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date for the range (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date for the range (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Duration in minutes",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Available time slots for scheduling",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarAvailability"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "http",
        "scheme": "bearer",
        "description": "API key authentication. Format: 'Bearer klen_yourapikey'"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": ["error", "message"]
      },
      "CallList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of calls matching the criteria"
          },
          "page": {
            "type": "integer",
            "description": "Current page"
          },
          "limit": {
            "type": "integer",
            "description": "Results per page"
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages"
          },
          "calls": {
            "type": "array",
            "description": "List of calls",
            "items": {
              "$ref": "#/components/schemas/CallSummary"
            }
          }
        },
        "required": ["count", "page", "limit", "pages", "calls"]
      },
      "CallSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Call ID"
          },
          "agent_id": {
            "type": "string",
            "description": "Agent ID or assistant ID"
          },
          "agent_name": {
            "type": "string",
            "description": "Agent name"
          },
          "status": {
            "type": "string",
            "description": "Call status",
            "enum": ["queued", "in-progress", "completed", "failed"]
          },
          "type": {
            "type": "string",
            "description": "Call type",
            "enum": ["inbound", "outbound"]
          },
          "phone_number": {
            "type": "string",
            "description": "Client phone number"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "description": "Call start time"
          },
          "ended_at": {
            "type": "string",
            "format": "date-time",
            "description": "Call end time"
          },
          "duration_seconds": {
            "type": "integer",
            "description": "Call duration in seconds"
          },
          "summary": {
            "type": "string",
            "description": "Brief summary of the call"
          },
          "recording_url": {
            "type": "string",
            "description": "URL to the call recording"
          },
          "contact": {
            "type": "object",
            "description": "Contact information",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Contact ID"
              },
              "name": {
                "type": "string",
                "description": "Contact name"
              },
              "email": {
                "type": "string",
                "description": "Contact email"
              },
              "company": {
                "type": "string",
                "description": "Contact company"
              }
            }
          }
        },
        "required": ["id", "agent_id", "agent_name", "status", "type", "phone_number", "started_at"]
      },
      "CallDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Call database ID"
          },
          "agent": {
            "type": "object",
            "description": "Agent information",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Agent ID"
              },
              "name": {
                "type": "string",
                "description": "Agent name"
              },
              "assistant_id": {
                "type": "string",
                "description": "Assistant ID from Vapi"
              }
            }
          },
          "call_id": {
            "type": "string",
            "description": "Call ID from Vapi"
          },
          "status": {
            "type": "string",
            "description": "Call status",
            "enum": ["queued", "in-progress", "completed", "failed"]
          },
          "type": {
            "type": "string",
            "description": "Call type",
            "enum": ["inbound", "outbound"]
          },
          "phone_number": {
            "type": "string",
            "description": "Client phone number"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "description": "Call start time"
          },
          "ended_at": {
            "type": "string",
            "format": "date-time",
            "description": "Call end time"
          },
          "duration_seconds": {
            "type": "integer",
            "description": "Call duration in seconds"
          },
          "summary": {
            "type": "string",
            "description": "AI-generated summary of the call"
          },
          "transcript": {
            "type": "string",
            "description": "Full transcript of the conversation"
          },
          "recording_url": {
            "type": "string",
            "description": "URL to the call recording"
          },
          "contact": {
            "type": "object",
            "description": "Contact information",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Contact ID"
              },
              "name": {
                "type": "string",
                "description": "Contact name"
              },
              "email": {
                "type": "string",
                "description": "Contact email"
              },
              "company": {
                "type": "string",
                "description": "Contact company"
              },
              "status": {
                "type": "string",
                "description": "Contact status"
              },
              "stage": {
                "type": "string",
                "description": "Contact stage"
              },
              "last_call_date": {
                "type": "string",
                "format": "date-time",
                "description": "Date of last call with contact"
              }
            }
          },
          "team": {
            "type": "object",
            "description": "Team information",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Team ID"
              },
              "name": {
                "type": "string",
                "description": "Team name"
              }
            }
          },
          "billing": {
            "type": "object",
            "description": "Billing information",
            "properties": {
              "status": {
                "type": "string",
                "description": "Billing status"
              },
              "initial_charge": {
                "type": "number",
                "description": "Initial charge amount"
              },
              "final_charge": {
                "type": "number",
                "description": "Final charge amount"
              },
              "total_charge": {
                "type": "number",
                "description": "Total charge amount"
              }
            }
          }
        },
        "required": ["id", "agent", "call_id", "status", "type", "phone_number", "started_at"]
      },
      "InitiateCallRequest": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "description": "Phone number to call in E.164 format (e.g., +15551234567)"
          },
          "agent_id": {
            "type": "string",
            "description": "ID of the AI agent to use (can be database ID or assistant_id)"
          },
          "contact_id": {
            "type": "integer",
            "description": "ID of an existing contact (if known)"
          },
          "variables": {
            "type": "object",
            "description": "Context variables to be used in the call",
            "additionalProperties": true
          }
        },
        "required": ["phone_number", "agent_id"]
      },
      "InitiateCallResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Call database ID"
          },
          "call_id": {
            "type": "string",
            "description": "Call ID from Vapi"
          },
          "status": {
            "type": "string",
            "description": "Call status",
            "enum": ["queued", "in-progress"]
          },
          "type": {
            "type": "string",
            "description": "Call type",
            "enum": ["outbound"]
          },
          "phone_number": {
            "type": "string",
            "description": "Client phone number"
          },
          "agent": {
            "type": "object",
            "description": "Agent information",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Agent ID"
              },
              "name": {
                "type": "string",
                "description": "Agent name"
              },
              "assistant_id": {
                "type": "string",
                "description": "Assistant ID from Vapi"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the call was created"
          },
          "estimated_start": {
            "type": "string",
            "format": "date-time",
            "description": "Estimated start time"
          }
        },
        "required": ["id", "call_id", "status", "type", "phone_number", "agent", "created_at"]
      },
      "AgentList": {
        "type": "object",
        "properties": {
          "agents": {
            "type": "array",
            "description": "List of agents",
            "items": {
              "$ref": "#/components/schemas/Agent"
            }
          }
        },
        "required": ["agents"]
      },
      "Agent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Agent database ID"
          },
          "assistant_id": {
            "type": "string",
            "description": "Assistant ID from Vapi"
          },
          "name": {
            "type": "string",
            "description": "Agent name"
          },
          "role": {
            "type": "string",
            "description": "Agent role",
            "enum": ["inbound agent", "outbound agent"]
          },
          "phone_number": {
            "type": "string",
            "description": "Phone number assigned to the agent"
          },
          "minutes_used": {
            "type": "number",
            "description": "Total minutes the agent has been used for calls"
          },
          "total_calls": {
            "type": "integer",
            "description": "Total number of calls the agent has handled"
          },
          "model": {
            "type": "string",
            "description": "AI model used by the agent"
          },
          "voice_id": {
            "type": "string",
            "description": "Voice ID used by the agent"
          },
          "can_make_calls": {
            "type": "boolean",
            "description": "Whether the agent can make calls"
          },
          "team_id": {
            "type": "integer",
            "description": "ID of the team the agent belongs to"
          }
        },
        "required": ["id", "assistant_id", "name", "role"]
      },
      "ContactList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of contacts matching the criteria"
          },
          "page": {
            "type": "integer",
            "description": "Current page"
          },
          "limit": {
            "type": "integer",
            "description": "Results per page"
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages"
          },
          "contacts": {
            "type": "array",
            "description": "List of contacts",
            "items": {
              "$ref": "#/components/schemas/ContactSummary"
            }
          }
        },
        "required": ["count", "page", "limit", "pages", "contacts"]
      },
      "ContactSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Contact ID"
          },
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "full_name": {
            "type": "string",
            "description": "Full name"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "company": {
            "type": "string",
            "description": "Company name"
          },
          "stage": {
            "type": "string",
            "description": "Contact stage"
          },
          "status": {
            "type": "string",
            "description": "Contact status"
          },
          "phone": {
            "type": "string",
            "description": "Primary phone number"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the contact was created"
          },
          "last_call_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the most recent call"
          },
          "tags": {
            "type": "array",
            "description": "List of tags",
            "items": {
              "type": "string"
            }
          },
          "team": {
            "type": "object",
            "description": "Team information",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Team ID"
              },
              "name": {
                "type": "string",
                "description": "Team name"
              }
            }
          }
        },
        "required": ["id", "first_name", "full_name"]
      },
      "ContactDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Contact ID"
          },
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "full_name": {
            "type": "string",
            "description": "Full name"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "company": {
            "type": "string",
            "description": "Company name"
          },
          "website": {
            "type": "string",
            "description": "Company or personal website URL"
          },
          "stage": {
            "type": "string",
            "description": "Contact stage"
          },
          "stage_display": {
            "type": "string",
            "description": "Human-readable stage name"
          },
          "status": {
            "type": "string",
            "description": "Contact status"
          },
          "status_display": {
            "type": "string",
            "description": "Human-readable status name"
          },
          "address": {
            "type": "object",
            "description": "Physical address information",
            "properties": {
              "street": {
                "type": "string",
                "description": "Street address"
              },
              "city": {
                "type": "string",
                "description": "City"
              },
              "state": {
                "type": "string",
                "description": "State or province"
              },
              "zip_code": {
                "type": "string",
                "description": "Postal or ZIP code"
              },
              "country": {
                "type": "string",
                "description": "Country"
              }
            }
          },
          "timezone": {
            "type": "string",
            "description": "Contact's timezone (IANA format)"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the contact was created"
          },
          "last_call_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the most recent call"
          },
          "phone_numbers": {
            "type": "array",
            "description": "List of phone numbers",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Phone number ID"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Phone number"
                },
                "phone_type": {
                  "type": "string",
                  "description": "Phone type (mobile, work, home, etc.)"
                },
                "primary": {
                  "type": "boolean",
                  "description": "Whether this is the primary phone number"
                },
                "do_not_call": {
                  "type": "boolean",
                  "description": "Whether this number is on the do not call list"
                },
                "dnc_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date when the number was added to the do not call list"
                },
                "dnc_reason": {
                  "type": "string",
                  "description": "Reason for adding to the do not call list"
                }
              }
            }
          },
          "tags": {
            "type": "array",
            "description": "List of tags",
            "items": {
              "type": "string"
            }
          },
          "recent_notes": {
            "type": "array",
            "description": "List of recent notes",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Note ID"
                },
                "content": {
                  "type": "string",
                  "description": "Note content"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Note creation date"
                },
                "note_type": {
                  "type": "string",
                  "description": "Note type"
                },
                "call_result": {
                  "type": "string",
                  "description": "Call result"
                }
              }
            }
          },
          "custom_context": {
            "type": "object",
            "description": "Custom fields and data",
            "additionalProperties": true
          },
          "industry_context": {
            "type": "object",
            "description": "Industry-specific information",
            "additionalProperties": true
          },
          "team": {
            "type": "object",
            "description": "Team information",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Team ID"
              },
              "name": {
                "type": "string",
                "description": "Team name"
              }
            }
          },
          "owner": {
            "type": "object",
            "description": "User information for the contact owner",
            "properties": {
              "id": {
                "type": "integer",
                "description": "User ID"
              },
              "username": {
                "type": "string",
                "description": "Username"
              },
              "email": {
                "type": "string",
                "description": "Email address"
              }
            }
          }
        },
        "required": ["id", "first_name", "full_name"]
      },
      "CreateContactRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "company": {
            "type": "string",
            "description": "Company name"
          },
          "website": {
            "type": "string",
            "description": "Company or personal website URL"
          },
          "address": {
            "type": "string",
            "description": "Street address"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "state": {
            "type": "string",
            "description": "State or province"
          },
          "zip_code": {
            "type": "string",
            "description": "Postal or ZIP code"
          },
          "country": {
            "type": "string",
            "description": "Country",
            "default": "US"
          },
          "status": {
            "type": "string",
            "description": "Contact status",
            "default": "not_contacted"
          },
          "stage": {
            "type": "string",
            "description": "Contact stage",
            "default": "lead"
          },
          "team_id": {
            "type": "integer",
            "description": "ID of the team to assign the contact to"
          },
          "tags": {
            "type": "array",
            "description": "List of tags",
            "items": {
              "type": "string"
            }
          },
          "phone_numbers": {
            "type": "array",
            "description": "List of phone numbers",
            "items": {
              "type": "object",
              "properties": {
                "phone_number": {
                  "type": "string",
                  "description": "Phone number in E.164 format"
                },
                "phone_type": {
                  "type": "string",
                  "description": "Phone type (mobile, work, home, etc.)",
                  "default": "mobile"
                },
                "primary": {
                  "type": "boolean",
                  "description": "Whether this is the primary phone number",
                  "default": false
                },
                "do_not_call": {
                  "type": "boolean",
                  "description": "Whether this number is on the do not call list",
                  "default": false
                }
              },
              "required": ["phone_number"]
            }
          },
          "custom_context": {
            "type": "object",
            "description": "Custom fields and data",
            "additionalProperties": true
          },
          "industry_context": {
            "type": "object",
            "description": "Industry-specific information",
            "additionalProperties": true
          }
        },
        "required": ["first_name"]
      },
      "CreateContactResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Contact ID"
          },
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "full_name": {
            "type": "string",
            "description": "Full name"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          }
        },
        "required": ["id", "first_name", "full_name", "message"]
      },
      "UpdateContactRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "company": {
            "type": "string",
            "description": "Company name"
          },
          "website": {
            "type": "string",
            "description": "Company or personal website URL"
          },
          "address": {
            "type": "string",
            "description": "Street address"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "state": {
            "type": "string",
            "description": "State or province"
          },
          "zip_code": {
            "type": "string",
            "description": "Postal or ZIP code"
          },
          "country": {
            "type": "string",
            "description": "Country"
          },
          "status": {
            "type": "string",
            "description": "Contact status"
          },
          "stage": {
            "type": "string",
            "description": "Contact stage"
          },
          "team_id": {
            "type": "integer",
            "description": "ID of the team to assign the contact to"
          },
          "tags": {
            "type": "array",
            "description": "List of tags",
            "items": {
              "type": "string"
            }
          },
          "phone_numbers": {
            "type": "array",
            "description": "List of phone numbers",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of an existing phone number (for updates)"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Phone number in E.164 format"
                },
                "phone_type": {
                  "type": "string",
                  "description": "Phone type (mobile, work, home, etc.)"
                },
                "primary": {
                  "type": "boolean",
                  "description": "Whether this is the primary phone number"
                },
                "do_not_call": {
                  "type": "boolean",
                  "description": "Whether this number is on the do not call list"
                }
              }
            }
          },
          "custom_context": {
            "type": "object",
            "description": "Custom fields and data",
            "additionalProperties": true
          },
          "industry_context": {
            "type": "object",
            "description": "Industry-specific information",
            "additionalProperties": true
          }
        }
      },
      "UpdateContactResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Contact ID"
          },
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "full_name": {
            "type": "string",
            "description": "Full name"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          }
        },
        "required": ["id", "first_name", "full_name", "message"]
      },
      "CalendarEventList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of events matching the criteria"
          },
          "page": {
            "type": "integer",
            "description": "Current page"
          },
          "limit": {
            "type": "integer",
            "description": "Results per page"
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages"
          },
          "events": {
            "type": "array",
            "description": "List of events",
            "items": {
              "$ref": "#/components/schemas/CalendarEventSummary"
            }
          }
        },
        "required": ["count", "page", "limit", "pages", "events"]
      },
      "CalendarEventSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Event ID"
          },
          "uuid": {
            "type": "string",
            "description": "Event UUID"
          },
          "title": {
            "type": "string",
            "description": "Event title"
          },
          "event_type": {
            "type": "string",
            "description": "Type of event",
            "enum": ["meeting", "appointment", "busy", "voice_call", "video_call"]
          },
          "status": {
            "type": "string",
            "description": "Event status",
            "enum": ["scheduled", "confirmed", "cancelled", "completed", "no_show"]
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event end time"
          },
          "duration_minutes": {
            "type": "integer",
            "description": "Event duration in minutes"
          },
          "location": {
            "type": "string",
            "description": "Event location"
          },
          "has_video_conference": {
            "type": "boolean",
            "description": "Whether the event has video conferencing enabled"
          },
          "video_conference_url": {
            "type": "string",
            "description": "URL for video conferencing"
          },
          "created_by_ai_agent": {
            "type": "boolean",
            "description": "Whether the event was created by an AI agent"
          },
          "ai_agent": {
            "type": "object",
            "description": "AI agent information (if event was created by an agent)",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Agent ID"
              },
              "name": {
                "type": "string",
                "description": "Agent name"
              },
              "assistant_id": {
                "type": "string",
                "description": "Assistant ID from Vapi"
              }
            }
          },
          "customer": {
            "type": "object",
            "description": "Customer information",
            "properties": {
              "name": {
                "type": "string",
                "description": "Customer name"
              },
              "email": {
                "type": "string",
                "description": "Customer email"
              },
              "phone": {
                "type": "string",
                "description": "Customer phone number"
              }
            }
          }
        },
        "required": ["id", "uuid", "title", "start_time", "end_time", "status"]
      },
      "CalendarEventDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Event ID"
          },
          "uuid": {
            "type": "string",
            "description": "Event UUID"
          },
          "title": {
            "type": "string",
            "description": "Event title"
          },
          "description": {
            "type": "string",
            "description": "Event description"
          },
          "event_type": {
            "type": "string",
            "description": "Type of event",
            "enum": ["meeting", "appointment", "busy", "voice_call", "video_call"]
          },
          "event_type_display": {
            "type": "string",
            "description": "Human-readable event type"
          },
          "status": {
            "type": "string",
            "description": "Event status",
            "enum": ["scheduled", "confirmed", "cancelled", "completed", "no_show"]
          },
          "status_display": {
            "type": "string",
            "description": "Human-readable status"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event end time"
          },
          "duration_minutes": {
            "type": "integer",
            "description": "Event duration in minutes"
          },
          "location": {
            "type": "string",
            "description": "Event location"
          },
          "has_video_conference": {
            "type": "boolean",
            "description": "Whether the event has video conferencing enabled"
          },
          "video_conference_url": {
            "type": "string",
            "description": "URL for video conferencing"
          },
          "video_conference_provider": {
            "type": "string",
            "description": "Provider of video conferencing"
          },
          "created_by_ai_agent": {
            "type": "boolean",
            "description": "Whether the event was created by an AI agent"
          },
          "is_reminder_enabled": {
            "type": "boolean",
            "description": "Whether reminders are enabled for this event"
          },
          "remind_before_minutes": {
            "type": "integer",
            "description": "How many minutes before the event to send a reminder"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the event was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the event was last updated"
          },
          "customer": {
            "type": "object",
            "description": "Customer information",
            "properties": {
              "name": {
                "type": "string",
                "description": "Customer name"
              },
              "email": {
                "type": "string",
                "description": "Customer email"
              },
              "phone": {
                "type": "string",
                "description": "Customer phone number"
              },
              "notes": {
                "type": "string",
                "description": "Customer notes"
              }
            }
          },
          "ai_agent": {
            "type": "object",
            "description": "AI agent information (if event was created by an agent)",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Agent ID"
              },
              "name": {
                "type": "string",
                "description": "Agent name"
              },
              "assistant_id": {
                "type": "string",
                "description": "Assistant ID from Vapi"
              }
            }
          },
          "team": {
            "type": "object",
            "description": "Team information",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Team ID"
              },
              "name": {
                "type": "string",
                "description": "Team name"
              }
            }
          },
          "external_calendars": {
            "type": "object",
            "description": "External calendar IDs",
            "properties": {
              "google": {
                "type": "string",
                "description": "Google Calendar event ID"
              },
              "outlook": {
                "type": "string",
                "description": "Outlook Calendar event ID"
              },
              "gohighlevel": {
                "type": "string",
                "description": "GoHighLevel Calendar event ID"
              }
            }
          },
          "ics_url": {
            "type": "string",
            "description": "URL to download ICS file for this event"
          }
        },
        "required": ["id", "uuid", "title", "start_time", "end_time", "status"]
      },
      "CreateCalendarEventRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Event title"
          },
          "description": {
            "type": "string",
            "description": "Event description"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event end time"
          },
          "event_type": {
            "type": "string",
            "description": "Type of event",
            "enum": ["meeting", "appointment", "busy", "voice_call", "video_call"],
            "default": "meeting"
          },
          "status": {
            "type": "string",
            "description": "Event status",
            "enum": ["scheduled", "confirmed"],
            "default": "scheduled"
          },
          "location": {
            "type": "string",
            "description": "Event location"
          },
          "customer_name": {
            "type": "string",
            "description": "Customer name"
          },
          "customer_email": {
            "type": "string",
            "description": "Customer email"
          },
          "customer_phone": {
            "type": "string",
            "description": "Customer phone number"
          },
          "customer_notes": {
            "type": "string",
            "description": "Notes about the customer or appointment"
          },
          "has_video_conference": {
            "type": "boolean",
            "description": "Whether to enable video conferencing",
            "default": false
          },
          "video_conference_url": {
            "type": "string",
            "description": "URL for video conferencing"
          },
          "video_conference_provider": {
            "type": "string",
            "description": "Provider of video conferencing"
          },
          "is_reminder_enabled": {
            "type": "boolean",
            "description": "Whether to enable reminders",
            "default": true
          },
          "remind_before_minutes": {
            "type": "integer",
            "description": "How many minutes before the event to send a reminder",
            "default": 60
          },
          "ai_agent_id": {
            "type": "integer",
            "description": "ID of the AI agent to associate with this event"
          },
          "team_id": {
            "type": "integer",
            "description": "ID of the team to associate with this event"
          },
          "created_by_ai_agent": {
            "type": "boolean",
            "description": "Whether this event was created by an AI agent",
            "default": false
          },
          "sync_external_calendars": {
            "type": "boolean",
            "description": "Whether to sync this event with connected external calendars",
            "default": true
          },
          "send_notifications": {
            "type": "boolean",
            "description": "Whether to send notifications about this event",
            "default": true
          }
        },
        "required": ["title", "start_time", "end_time"]
      },
      "CreateCalendarEventResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Event ID"
          },
          "uuid": {
            "type": "string",
            "description": "Event UUID"
          },
          "title": {
            "type": "string",
            "description": "Event title"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event end time"
          },
          "status": {
            "type": "string",
            "description": "Event status"
          },
          "ics_url": {
            "type": "string",
            "description": "URL to download ICS file for this event"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          }
        },
        "required": ["id", "uuid", "title", "start_time", "end_time", "status", "message"]
      },
      "UpdateCalendarEventRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Event title"
          },
          "description": {
            "type": "string",
            "description": "Event description"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event end time"
          },
          "event_type": {
            "type": "string",
            "description": "Type of event",
            "enum": ["meeting", "appointment", "busy", "voice_call", "video_call"]
          },
          "status": {
            "type": "string",
            "description": "Event status",
            "enum": ["scheduled", "confirmed", "cancelled", "completed", "no_show"]
          },
          "location": {
            "type": "string",
            "description": "Event location"
          },
          "customer_name": {
            "type": "string",
            "description": "Customer name"
          },
          "customer_email": {
            "type": "string",
            "description": "Customer email"
          },
          "customer_phone": {
            "type": "string",
            "description": "Customer phone number"
          },
          "customer_notes": {
            "type": "string",
            "description": "Notes about the customer or appointment"
          },
          "has_video_conference": {
            "type": "boolean",
            "description": "Whether to enable video conferencing"
          },
          "video_conference_url": {
            "type": "string",
            "description": "URL for video conferencing"
          },
          "video_conference_provider": {
            "type": "string",
            "description": "Provider of video conferencing"
          },
          "is_reminder_enabled": {
            "type": "boolean",
            "description": "Whether to enable reminders"
          },
          "remind_before_minutes": {
            "type": "integer",
            "description": "How many minutes before the event to send a reminder"
          },
          "ai_agent_id": {
            "type": "integer",
            "description": "ID of the AI agent to associate with this event"
          },
          "team_id": {
            "type": "integer",
            "description": "ID of the team to associate with this event"
          },
          "sync_external_calendars": {
            "type": "boolean",
            "description": "Whether to sync this update with connected external calendars",
            "default": true
          },
          "send_notifications": {
            "type": "boolean",
            "description": "Whether to send notifications about this update",
            "default": true
          }
        }
      },
      "UpdateCalendarEventResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Event ID"
          },
          "uuid": {
            "type": "string",
            "description": "Event UUID"
          },
          "title": {
            "type": "string",
            "description": "Event title"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Event end time"
          },
          "status": {
            "type": "string",
            "description": "Event status"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          }
        },
        "required": ["id", "uuid", "title", "start_time", "end_time", "status", "message"]
      },
      "CancelCalendarEventRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "Reason for cancellation"
          }
        }
      },
      "CancelCalendarEventResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Event ID"
          },
          "uuid": {
            "type": "string",
            "description": "Event UUID"
          },
          "status": {
            "type": "string",
            "description": "Event status (cancelled)"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          }
        },
        "required": ["id", "uuid", "status", "message"]
      },
      "CalendarAvailability": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "description": "User ID"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "Start date of the range"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "End date of the range"
          },
          "duration_minutes": {
            "type": "integer",
            "description": "Duration in minutes"
          },
          "available_slots": {
            "type": "array",
            "description": "List of available time slots",
            "items": {
              "type": "object",
              "properties": {
                "start": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start time of the slot"
                },
                "end": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End time of the slot"
                },
                "duration_minutes": {
                  "type": "integer",
                  "description": "Duration of the slot in minutes"
                }
              },
              "required": ["start", "end", "duration_minutes"]
            }
          },
          "count": {
            "type": "integer",
            "description": "Total number of available slots"
          }
        },
        "required": ["user_id", "start_date", "end_date", "duration_minutes", "available_slots", "count"]
      }
    }
  }
}